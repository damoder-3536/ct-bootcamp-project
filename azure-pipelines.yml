trigger:
  - AmitBranch

pool:
  vmImage: ubuntu-latest
stages:
- stage: Terraform_Install
  jobs:
  - job: Install_Terraform
    continueOnError : False
    steps:
    - bash: echo "Terraform is getting installed in the agent."
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'
- stage: Terraform_Plan
  jobs:
  - job: Plan_Terraform
    continueOnError : False
    steps:
      - bash: echo "Terraform is running."
      - task: TerraformTaskV3@3
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          backendServiceArm: 'Visual Studio Professional Subscription(4f52f238-f051-4144-a10c-7b53b31dfad7)'
          backendAzureRmResourceGroupName: 'RGAMT'
          backendAzureRmStorageAccountName: 'storageaccount1091'
          backendAzureRmContainerName: 'container'
          backendAzureRmKey: 'statefile.tfstate'
      - task: TerraformTaskV3@3
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          
          environmentServiceNameAzureRM: 'Visual Studio Professional Subscription(4f52f238-f051-4144-a10c-7b53b31dfad7)'
- stage: Build_Artifact
  jobs:
  - job: Artifact_Build
    continueOnError : False
    steps:
    - bash: echo "Copy & Building Artifacts"
    - task: CopyFiles@2
      inputs:
        contents: '_buildOutput/**'
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Artifact'
        publishLocation: 'Container'
  
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'Artifact'
        publishLocation: 'pipeline'
- stage: deploy
  dependsOn: Build_Artifact
  jobs:
  - job: run_test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: Artifact

    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        backendServiceArm: 'Visual Studio Professional Subscription(4f52f238-f051-4144-a10c-7b53b31dfad7)'
        backendAzureRmResourceGroupName: 'RGAMT'
        backendAzureRmStorageAccountName: 'storageaccount1091'
        backendAzureRmContainerName: 'container'
        backendAzureRmKey: 'statefile.tfstate'
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'apply'
        
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        environmentServiceNameAzureRM: 'Visual Studio Professional Subscription(4f52f238-f051-4144-a10c-7b53b31dfad7)'